// Code generated by protoc-gen-go. DO NOT EDIT.
// source: daemon.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HelloContentServiceRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloContentServiceRequest) Reset()         { *m = HelloContentServiceRequest{} }
func (m *HelloContentServiceRequest) String() string { return proto.CompactTextString(m) }
func (*HelloContentServiceRequest) ProtoMessage()    {}
func (*HelloContentServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec90cbc4aa12fc6, []int{0}
}

func (m *HelloContentServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloContentServiceRequest.Unmarshal(m, b)
}
func (m *HelloContentServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloContentServiceRequest.Marshal(b, m, deterministic)
}
func (m *HelloContentServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloContentServiceRequest.Merge(m, src)
}
func (m *HelloContentServiceRequest) XXX_Size() int {
	return xxx_messageInfo_HelloContentServiceRequest.Size(m)
}
func (m *HelloContentServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloContentServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloContentServiceRequest proto.InternalMessageInfo

func (m *HelloContentServiceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HelloContentServiceResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloContentServiceResponse) Reset()         { *m = HelloContentServiceResponse{} }
func (m *HelloContentServiceResponse) String() string { return proto.CompactTextString(m) }
func (*HelloContentServiceResponse) ProtoMessage()    {}
func (*HelloContentServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec90cbc4aa12fc6, []int{1}
}

func (m *HelloContentServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloContentServiceResponse.Unmarshal(m, b)
}
func (m *HelloContentServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloContentServiceResponse.Marshal(b, m, deterministic)
}
func (m *HelloContentServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloContentServiceResponse.Merge(m, src)
}
func (m *HelloContentServiceResponse) XXX_Size() int {
	return xxx_messageInfo_HelloContentServiceResponse.Size(m)
}
func (m *HelloContentServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloContentServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HelloContentServiceResponse proto.InternalMessageInfo

func (m *HelloContentServiceResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloContentServiceRequest)(nil), "contentservice.HelloContentServiceRequest")
	proto.RegisterType((*HelloContentServiceResponse)(nil), "contentservice.HelloContentServiceResponse")
}

func init() {
	proto.RegisterFile("daemon.proto", fileDescriptor_3ec90cbc4aa12fc6)
}

var fileDescriptor_3ec90cbc4aa12fc6 = []byte{
	// 189 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0x49, 0x4c, 0xcd,
	0xcd, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4b, 0xce, 0xcf, 0x2b, 0x49, 0xcd,
	0x2b, 0x29, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x55, 0x32, 0xe0, 0x92, 0xf2, 0x48, 0xcd, 0xc9,
	0xc9, 0x77, 0x86, 0x08, 0x07, 0x43, 0x84, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x84,
	0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x25,
	0x73, 0x2e, 0x69, 0xac, 0x3a, 0x8a, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x24, 0xb8, 0xd8, 0x73,
	0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x61, 0xba, 0x60, 0x5c, 0xa3, 0x26, 0x46, 0x2e, 0x3e, 0x54, 0x4d,
	0x42, 0x05, 0x5c, 0xc2, 0x58, 0xcc, 0x12, 0xd2, 0xd2, 0x43, 0x75, 0xa5, 0x1e, 0x6e, 0x27, 0x4a,
	0x69, 0x13, 0xa5, 0x16, 0xe2, 0x38, 0x25, 0x06, 0x27, 0xc3, 0x28, 0xfd, 0xf4, 0xcc, 0x92, 0x8c,
	0xd2, 0x24, 0xbd, 0xe4, 0xfc, 0x5c, 0x10, 0xb3, 0x20, 0x3f, 0x45, 0x37, 0x33, 0x1f, 0xca, 0xd2,
	0x87, 0x9a, 0xa5, 0x0b, 0x35, 0x4c, 0x3f, 0xb1, 0x20, 0x33, 0x89, 0x0d, 0x1c, 0x72, 0xc6, 0x80,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x5c, 0xfe, 0x1d, 0x62, 0x49, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ContentServiceClient is the client API for ContentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContentServiceClient interface {
	// HelloConttentService says Hello
	HelloContentService(ctx context.Context, in *HelloContentServiceRequest, opts ...grpc.CallOption) (*HelloContentServiceResponse, error)
}

type contentServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewContentServiceClient(cc grpc.ClientConnInterface) ContentServiceClient {
	return &contentServiceClient{cc}
}

func (c *contentServiceClient) HelloContentService(ctx context.Context, in *HelloContentServiceRequest, opts ...grpc.CallOption) (*HelloContentServiceResponse, error) {
	out := new(HelloContentServiceResponse)
	err := c.cc.Invoke(ctx, "/contentservice.ContentService/HelloContentService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContentServiceServer is the server API for ContentService service.
type ContentServiceServer interface {
	// HelloConttentService says Hello
	HelloContentService(context.Context, *HelloContentServiceRequest) (*HelloContentServiceResponse, error)
}

// UnimplementedContentServiceServer can be embedded to have forward compatible implementations.
type UnimplementedContentServiceServer struct {
}

func (*UnimplementedContentServiceServer) HelloContentService(ctx context.Context, req *HelloContentServiceRequest) (*HelloContentServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelloContentService not implemented")
}

func RegisterContentServiceServer(s *grpc.Server, srv ContentServiceServer) {
	s.RegisterService(&_ContentService_serviceDesc, srv)
}

func _ContentService_HelloContentService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloContentServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).HelloContentService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contentservice.ContentService/HelloContentService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).HelloContentService(ctx, req.(*HelloContentServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ContentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "contentservice.ContentService",
	HandlerType: (*ContentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HelloContentService",
			Handler:    _ContentService_HelloContentService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "daemon.proto",
}
